<body><canvas id="target"></canvas></body>

<script type="text/javascript" src="script/Drawer.js"></script>
<script type="text/javascript" src="script/Math.js"></script>
<script type="text/javascript">
var drawer = new Drawer("target", 600, 600);
var ROTOR_DIAMETER = 400;
var ROTOR_POLE = 8;
var STATOR_DIAMETER = 500;
var STATOR_POLE = 4;
var STATOR_GAP = 0.05;
var MAGNET = 0.1;
var MAGNET_GAP = 0.1;

var rotor = {
	magnet: [],
	theta:0,
	omega:1,
	delta_omega: 1.01,
	ofs: new vec3(ROTOR_DIAMETER*0.75, ROTOR_DIAMETER*0.75, 0)
};

var stator = [];

for (let p=0; p<3*STATOR_POLE; p++) {
	let color;
	switch (p%3) {
	case 0:
		color = [0, 127, 0]; break;
	case 1:
		color = [0, 232, 192]; break;
	case 2:
		color = [232, 232, 0];  break;
	}

	let div = 8;
	let point = new Array();
	// outer
	for (let d=0; d<=div; d++) {
		let th = 8*Math.atan(1)*(p + d*(1-STATOR_GAP*2) / div + STATOR_GAP)/(3*STATOR_POLE);
		let r = STATOR_DIAMETER/2;
		point.push(new vec3(r*Math.cos(th), r*Math.sin(th), 0));
	}
	// inner
	for (let d=div; 0 <= d; d--) {
		let th = 8*Math.atan(1)*(p + d*(1-STATOR_GAP*2) / div + STATOR_GAP)/(3*STATOR_POLE);
		let r = STATOR_DIAMETER/2 - (STATOR_DIAMETER - ROTOR_DIAMETER) * 0.9 / 2;
		point.push(new vec3(r*Math.cos(th), r*Math.sin(th), 0));
	}
	stator.push({
		point: point,
		color: color,
		voltage:0
	});
}

for (let p=0; p<ROTOR_POLE; p++) {
	let color;
	if (p%2==0) {
		color = [255, 0, 0];
	} else {
		color = [0, 0, 255];
	}
	let div = 8;
	let point = new Array();
	// outer
	for (let d=0; d<=div; d++) {
		let th = 8*Math.atan(1)*(p + d*(1-MAGNET_GAP*2) / div + MAGNET_GAP)/ROTOR_POLE;
		let r = ROTOR_DIAMETER/2;
		point.push(new vec3(r*Math.cos(th), r*Math.sin(th), 0));
	}
	// inner
	for (let d=div; 0 <= d; d--) {
		let th = 8*Math.atan(1)*(p + d*(1-MAGNET_GAP*2) / div + MAGNET_GAP)/ROTOR_POLE;
		let r = (ROTOR_DIAMETER - ROTOR_DIAMETER * MAGNET)/2;
		point.push(new vec3(r*Math.cos(th), r*Math.sin(th), 0));
	}
	rotor.magnet.push({color: color, point: point});
}

function main() {
	drawer.clear();

	for(let p=0; p<rotor.magnet.length; p++) {
		let point = new Array();
		let magnet = rotor.magnet[p];
		for (let i=0; i<magnet.point.length; i++) {
			let x = magnet.point[i].X;
			let y = magnet.point[i].Y;
			let rot_x = x*Math.cos(rotor.theta) - y*Math.sin(rotor.theta);
			let rot_y = x*Math.sin(rotor.theta) + y*Math.cos(rotor.theta);
			point.push(new vec3(rot_x, rot_y, 0));
		}
		drawer.fillPolygon(point, rotor.ofs, magnet.color);
	}

	for(let p=0; p<stator.length; p++) {
		drawer.fillPolygon(stator[p].point, rotor.ofs, stator[p].color);
	}

	if (100/60 < rotor.omega) {
		rotor.delta_omega = 1 - 1/600;
	}
	if (rotor.omega < 5/60) {
		rotor.delta_omega = 1 + 1/100;
	}
	rotor.omega *= rotor.delta_omega;
	rotor.theta += 8*Math.atan(1)*rotor.omega/60;
	if (8*Math.atan(1) <= rotor.theta) {
		rotor.theta -= 8*Math.atan(1);
	}

	requestNextAnimationFrame(main);
}
requestNextAnimationFrame(main);
</script>
